name: Release Artifact Publisher

on:
  workflow_call:
    inputs:
      release_version:
        required: true
        type: string
      repository_url:
        required: true
        type: string
      gradle_command:
        required: true
        type: string
      branch:
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GH_USER_NAME: ${{ github.actor }}

    steps:
      - name: Set ref
        run: |
            echo "REF=$([[$GITHUB_EVENT_NAME == 'release']] && echo refs/tags/${{ github.event.release.tag_name }} || echo ${{ inputs.branch }})" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
         ref: ${{ env.REF }}

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Setup git credentials
        uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          name: 'reportportal.io'
          email: 'support@reportportal.io'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Artifacts
        run: |
          ${{ inputs.gradle_command }} --no-build-cache --exclude-task test \
          -PreleaseMode=true \
          -PgithubUserName=${{env.GH_USER_NAME}} \
          -PgithubToken=${{ secrets.GITHUB_TOKEN }} \
          -PpublishRepo=${{ inputs.repository_url }}${{ github.repository }} \
          -PgpgPassphrase=${{ secrets.GPG_PASSPHRASE }} \
          -PgpgPrivateKey="${{ secrets.GPG_PRIVATE_KEY }}" \
          -Prelease.releaseVersion=${{ inputs.release_version }}

      - name: Find Matching File
        id: find_file
        run: |
          file=$(ls build/libs/service-*-${{ inputs.release_version }}.jar | head -n 1)
          if [ -z "$file" ]; then
             echo "No matching file found!"
             exit 1
           fi
           echo "Found file: $file"
           filename=$(basename "$file")
           echo "file_path=$file" >> $GITHUB_ENV
           echo "file_name=$filename" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.file_path }}
          asset_name: ${{ env.file_name }}
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
