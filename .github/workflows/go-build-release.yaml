name: Go Release Artifact Publisher

on:
  workflow_call:
    inputs:
      release_version:
        required: true
        type: string
      go_version:
        required: true
        type: string
      branch:
        required: true
        type: string
      service_name:
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GH_USER_NAME: ${{ github.actor }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ inputs.go_version }}

      - name: Build Artifacts
        env:
          APP_DIR: "/go/src/github.com/org/repo"
          BUILD_DATE: "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          PACKAGE_COMMONS: "github.com/reportportal/commons-go/v5"
          REPO_NAME: ${{ github.action_repository }}
          VERSION: ${{ inputs.release_version }}
        run: |
            echo "Building Go binary..."
            CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
            -ldflags "-extldflags '-static' \
            -X ${PACKAGE_COMMONS}/commons.repo=${REPO_NAME} \
            -X ${PACKAGE_COMMONS}/commons.branch=${{ inputs.branch }} \
            -X ${PACKAGE_COMMONS}/commons.buildDate=${BUILD_DATE} \
            -X ${PACKAGE_COMMONS}/commons.version=${VERSION}" \
            -o build/${{ inputs.service_name }}-${VERSION} ./

      - name: List files in build directory
        run: |
          echo "Listing files in build directory:"
          ls -al build/

      - name: Upload Debug Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Debug Go Build
          path: build/${{ inputs.service_name }}-${{ inputs.release_version }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/${{ inputs.service_name }}-${{ inputs.release_version }}
          asset_name: ${{ inputs.service_name }}-${{ inputs.release_version }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}