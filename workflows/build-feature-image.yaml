name: Build feature image and push to AWS ECR

on:
  workflow_call:
    inputs:
      aws-region:
        description: 'AWS Region'
        required: true
        type: string
      ecr-repository:
        description: 'ECR Repository'
        required: true
        type: string
      build-platforms:
        description: 'Build platforms'
        required: false
        type: string
        default: 'linux/amd64'
      environment:
        description: 'Environment'
        required: false
        type: string
        default: 'development'
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key ID'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'AWS Secret Access Key'
        required: true

env:
  AWS_REGION: ${{ inputs.aws-region }}         # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ${{ inputs.ecr-repository }} # set this to your Amazon ECR repository name
  PLATFORMS: ${{ inputs.build-platforms }}      # set target build platforms. By default linux/amd64

jobs:
  build-and-export:
    name: Build and export to AWS ECR
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          # role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Create variables
        id: vars
        run: |
          echo "tag=$(echo ${{ github.head_ref }}-${{ github.run_number }} | tr '/' '-')" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v4
        env:
          VERSION: ${{ github.head_ref }}-${{ steps.vars.outputs.sha_short }}
          BRANCH: ${{ github.head_ref }}
          DATE: ${{ steps.vars.outputs.date }}
          IMAGE_TAG: ${{ steps.vars.outputs.tag }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        with:
          context: .
          push: true
          build-args: |
            APP_VERSION=${{ env.VERSION }}
            BUILD_BRANCH=${{ env.BRANCH }}
            BUILD_DATE=${{ env.DATE }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
      
      - name: Summarize
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.vars.outputs.tag }}
        run: |
          echo "## General information about the build:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- :gift: Docker image in Amazon ECR: $ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_STEP_SUMMARY
          echo "- :octocat: The commit SHA from which the build was performed: [$GITHUB_SHA](https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA)" >> $GITHUB_STEP_SUMMARY
